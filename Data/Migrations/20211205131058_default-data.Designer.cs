// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIS.Data;

namespace PIS.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211205131058_default-data")]
    partial class defaultdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PIS.Models.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dtBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("ePublicPlace")
                        .HasColumnType("int");

                    b.Property<string>("strCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strHouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strPlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strPostCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PIS.Models.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dtBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("strAbbrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("PIS.Models.Material", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DefaultUnitPriceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrimaryUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("dtBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("eMaterialType")
                        .HasColumnType("int");

                    b.Property<string>("strDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DefaultUnitPriceId");

                    b.HasIndex("PrimaryUnitId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("PIS.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BillingAddressId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MailingAddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dtBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("ePayment")
                        .HasColumnType("int");

                    b.Property<int>("eStatus")
                        .HasColumnType("int");

                    b.Property<string>("strOrderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("MailingAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PIS.Models.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MaterialId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<double>("dQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("dtBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("strRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("PIS.Models.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaterialId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("dtBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("ePriceType")
                        .HasColumnType("int");

                    b.Property<decimal>("nPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("PIS.Models.Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MaterialId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("dtBeg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("iSIMultiplier")
                        .HasColumnType("int");

                    b.Property<string>("strAbbrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIS.Models.Material", b =>
                {
                    b.HasOne("PIS.Models.Price", "DefaultUnitPrice")
                        .WithMany()
                        .HasForeignKey("DefaultUnitPriceId");

                    b.HasOne("PIS.Models.Unit", "PrimaryUnit")
                        .WithMany()
                        .HasForeignKey("PrimaryUnitId");

                    b.Navigation("DefaultUnitPrice");

                    b.Navigation("PrimaryUnit");
                });

            modelBuilder.Entity("PIS.Models.Order", b =>
                {
                    b.HasOne("PIS.Models.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId");

                    b.HasOne("PIS.Models.Address", "MailingAddress")
                        .WithMany()
                        .HasForeignKey("MailingAddressId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BillingAddress");

                    b.Navigation("MailingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PIS.Models.OrderItem", b =>
                {
                    b.HasOne("PIS.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("PIS.Models.Order", "Order")
                        .WithMany("listOrderItem")
                        .HasForeignKey("OrderId");

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PIS.Models.Price", b =>
                {
                    b.HasOne("PIS.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("PIS.Models.Material", null)
                        .WithMany("listDefaultUnitPrice")
                        .HasForeignKey("MaterialId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("PIS.Models.Unit", b =>
                {
                    b.HasOne("PIS.Models.Material", null)
                        .WithMany("listAuxiliaryUnit")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("PIS.Models.Material", b =>
                {
                    b.Navigation("listAuxiliaryUnit");

                    b.Navigation("listDefaultUnitPrice");
                });

            modelBuilder.Entity("PIS.Models.Order", b =>
                {
                    b.Navigation("listOrderItem");
                });
#pragma warning restore 612, 618
        }
    }
}
